---
import Layout from '../layouts/Layout.astro';

let user = { name: 'Cargando...', email: '...', id: null, professor_cod: '...' };
let error = null;
---

<Layout title="Inicio">
  <div id="error" class="error-message text-white">{error}</div>
  <div class="user-info text-white">
    <h1 id="username">{user.name}</h1>
    <p><strong>Email:</strong> <span id="user-email">{user.email}</span></p>
    <p><strong>ID:</strong> <span id="user-id">{user.id}</span></p>
    <p><strong>Professor Code:</strong> <span id="user-professor-cod">{user.professor_cod}</span></p>
  </div>
  
  <div id="schedule-container" class="container mx-auto mt-10 text-white">
  </div>
</Layout>

<script type="module">
  async function fetchUserData() {
    const token = sessionStorage.getItem('authToken');
    if (!token) {
      document.getElementById('error').textContent = 'User is not authenticated';
      return;
    }

    try {
      const response = await fetch('http://127.0.0.1:8080/api/horario/user/id', {
        headers: {
          'Authorization': `Bearer ${token}`,
          'Accept': 'application/json'
        }
      });
      
      if (!response.ok) {
        throw new Error('Failed to fetch user data');
      }

      const data = await response.json();
      updateDOM(data);
    } catch (err) {
      document.getElementById('error').textContent = err.message;
    }
  }

  function updateDOM(data) {
    const user = data.user;
    const horarios = data.horarios;

    document.getElementById('username').textContent = user.name;
    document.getElementById('user-email').textContent = user.email;
    document.getElementById('user-id').textContent = user.id;
    document.getElementById('user-professor-cod').textContent = user.professor_cod;

    const scheduleContainer = document.getElementById('schedule-container');
    const table = document.createElement('table');
    table.className = 'min-w-full border-collapse border border-gray-200 text-white';

    const thead = document.createElement('thead');
    const headerRow = document.createElement('tr');
    const headers = ['Horas', 'Lunes', 'Martes', 'MiÃ©rcoles', 'Jueves', 'Viernes'];
    headers.forEach(headerText => {
      const th = document.createElement('th');
      th.className = 'border border-gray-200 px-4 py-2';
      th.textContent = headerText;
      headerRow.appendChild(th);
    });
    thead.appendChild(headerRow);
    table.appendChild(thead);

    const tbody = document.createElement('tbody');

    // Agrupa horarios por franja
    const franjas = horarios.reduce((acc, horario) => {
      const horaDesde = horario.franja.hora_desde;
      const horaHasta = horario.franja.hora_hasta;
      const hora = `${horaDesde} - ${horaHasta}`;
      if (!acc[hora]) {
        acc[hora] = {};
      }
      const aulaDesc = horario.aula?.descripcion || '';
      const grupoDesc = horario.grupo?.descripcion || 'no hay datos';
      acc[hora][horario.dia] = `${aulaDesc}  ${grupoDesc}`;
      return acc;
    }, {});

    // Crea filas por cada franja
    Object.keys(franjas).forEach(hora => {
      const row = document.createElement('tr');

      const horaCell = document.createElement('td');
      horaCell.className = 'border border-gray-200 px-4 py-2 text-center';
      const [horaDesde, horaHasta] = hora.split(' - ');
      horaCell.innerHTML = `<div style="display: flex; flex-direction: column; align-items: center;">
                              <span>${horaDesde}</span>
                              <span>-</span>
                              <span>${horaHasta}</span>
                            </div>`;
      row.appendChild(horaCell);

      const days = ['L', 'M', 'X', 'J', 'V'];
      days.forEach(day => {
        const dayCell = document.createElement('td');
        dayCell.className = 'border border-gray-200 px-4 py-2';
        dayCell.textContent = franjas[hora][day] || '';
        row.appendChild(dayCell);
      });

      tbody.appendChild(row);
    });

    table.appendChild(tbody);
    scheduleContainer.appendChild(table);
  }

  fetchUserData();
</script>
