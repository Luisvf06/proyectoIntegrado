---
import Layout from '../layouts/Layout.astro';

---

<Layout title="crearAusencia"/>
<!--Tipo de falta (tiempo que ocupa) -->
<div class="flex flex-col md:flex-row md:space-x-2 space-y-2 md:space-y-0">
    <button type="button" class="text-blue-700 hover:text-white border border-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:border-blue-500 dark:text-blue-500 dark:hover:text-white dark:hover:bg-blue-500 dark:focus:ring-blue-800">Unas horas</button>
  
    <button type="button" class="text-blue-700 hover:text-white border border-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:border-blue-500 dark:text-blue-500 dark:hover:text-white dark:hover:bg-blue-500 dark:focus:ring-blue-800">Todo el día</button>
  
    <button type="button" class="text-blue-700 hover:text-white border border-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:border-blue-500 dark:text-blue-500 dark:hover:text-white dark:hover:bg-blue-500 dark:focus:ring-blue-800">Varios días</button>
  </div>
<!--Menú de horas -->
<button id="dropdownSearchButton" data-dropdown-toggle="dropdownSearch" class="inline-flex items-center px-4 py-2 text-sm font-medium text-center text-white bg-blue-700 rounded-lg hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800" type="button">
    Dropdown search
    <svg class="w-2.5 h-2.5 ms-2.5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 10 6">
      <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 4 4 4-4"/>
    </svg>
  </button>
  <div id="dropdownSearch" class="z-10 hidden bg-white rounded-lg shadow w-60 dark:bg-gray-700">
    <div class="p-3">
      <label for="input-group-search" class="sr-only">Search</label>
      <div class="relative">
        <div class="absolute inset-y-0 start-0 flex items-center ps-3 pointer-events-none">
          <svg class="w-4 h-4 text-gray-500 dark:text-gray-400" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 20">
            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m19 19-4-4m0-7A7 7 0 1 1 1 8a7 7 0 0 1 14 0Z"/>
          </svg>
        </div>
        <input type="text" id="input-group-search" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full ps-10 p-2.5  dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="Search user">
      </div>
    </div>
    <ul id="dropdownItems" class="h-48 px-3 pb-3 overflow-y-auto text-sm text-gray-700 dark:text-gray-200" aria-labelledby="dropdownSearchButton">
      <!-- Dynamic list items will be inserted here -->
    </ul>
    <a href="#" class="flex items-center p-3 text-sm font-medium text-red-600 border-t border-gray-200 rounded-b-lg bg-gray-50 dark:border-gray-600 hover:bg-gray-100 dark:bg-gray-700 dark:hover:bg-gray-600 dark:text-red-500 hover:underline">
      <svg class="w-4 h-4 me-2" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 18">
        <path d="M6.5 9a4.5 4.5 0 1 0 0-9 4.5 4.5 0 0 0 0 9ZM8 10H5a5.006 5.006 0 0 0-5 5v2a1 1 0 0 0 1 1h11a1 1 0 0 0 1-1v-2a5.006 5.006 0 0 0-5-5Zm11-3h-6a1 1 0 1 0 0 2h6a1 1 0 1 0 0-2Z"/>
      </svg>
      Delete user
    </a>
  </div>
<!--Calendarios -->
<div class="card p-4 bg-white shadow-lg rounded-lg">
    <calendar-range months="1" 
      min-date="{minDate.toISOString()}" 
      max-date="{maxDate.toISOString()}"
      class="space-y-1"
    >
      <svg
        aria-label="Previous"
        slot="previous"
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 24 24"
        class="w-6 h-6 text-gray-600 hover:text-gray-900 cursor-pointer"
      >
        <path d="M15.75 19.5 8.25 12l7.5-7.5"></path>
      </svg>
      <svg
        aria-label="Next"
        slot="next"
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 24 24"
        class="w-6 h-6 text-gray-600 hover:text-gray-900 cursor-pointer"
      >
        <path d="m8.25 4.5 7.5 7.5-7.5 7.5"></path>
      </svg>
      <div class="grid grid-cols-1 gap-4">
        <calendar-month class="border rounded-lg p-4 shadow-md"></calendar-month>
      </div>
    </calendar-range>
  </div>
  <div class="card p-4 bg-white shadow-lg rounded-lg">
    <calendar-date months="1" 
      min-date="{minDate.toISOString()}" 
      max-date="{maxDate.toISOString()}"
      class="space-y-1"
    >
      <svg
        aria-label="Previous"
        slot="previous"
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 24 24"
        class="w-6 h-6 text-gray-600 hover:text-gray-900 cursor-pointer"
      >
        <path d="M15.75 19.5 8.25 12l7.5-7.5"></path>
      </svg>
      <svg
        aria-label="Next"
        slot="next"
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 24 24"
        class="w-6 h-6 text-gray-600 hover:text-gray-900 cursor-pointer"
      >
        <path d="m8.25 4.5 7.5 7.5-7.5 7.5"></path>
      </svg>
      <div class="grid grid-cols-1 gap-4">
        <calendar-month class="border rounded-lg p-4 shadow-md"></calendar-month>
      </div>
    </calendar-date>
  </div>
<script >
  import "cally";

  document.addEventListener('DOMContentLoaded', () => {
    const dropdownButton = document.getElementById('dropdownSearchButton');
    const dropdownMenu = document.getElementById('dropdownSearch');
    const dropdownItems = document.getElementById('dropdownItems');

    // Toggle dropdown visibility
    dropdownButton.addEventListener('click', () => {
      dropdownMenu.classList.toggle('hidden');
    });

    // Fetch data from API
    fetch('http://localhost:8080/api/franja/get')
      .then(response => response.json())
      .then(data => {
        const franjas = data; // Assuming the API returns an array of objects
        franjas.forEach(franja => {
          const listItem = document.createElement('li');
          const itemDiv = document.createElement('div');
          itemDiv.classList.add('flex', 'items-center', 'p-2', 'rounded', 'hover:bg-gray-100', 'dark:hover:bg-gray-600');

          const checkbox = document.createElement('input');
          checkbox.type = 'checkbox';
          checkbox.classList.add('w-4', 'h-4', 'text-blue-600', 'bg-gray-100', 'border-gray-300', 'rounded', 'focus:ring-blue-500', 'dark:focus:ring-blue-600', 'dark:ring-offset-gray-700', 'dark:focus:ring-offset-gray-700', 'focus:ring-2', 'dark:bg-gray-600', 'dark:border-gray-500');
          checkbox.id = `checkbox-item-${franja.id}`;
          checkbox.value = franja.hora_desde;

          const label = document.createElement('label');
          label.classList.add('w-full', 'ms-2', 'text-sm', 'font-medium', 'text-gray-900', 'rounded', 'dark:text-gray-300');
          label.htmlFor = `checkbox-item-${franja.id}`;
          label.textContent = franja.hora_desde;

          itemDiv.appendChild(checkbox);
          itemDiv.appendChild(label);
          listItem.appendChild(itemDiv);
          dropdownItems.appendChild(listItem);
        });
      })
      .catch(error => console.error('Error fetching data:', error));
  });
</script>
