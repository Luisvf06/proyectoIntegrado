---
import Layout from '../layouts/Layout.astro';
---
<Layout title="Mis Faltas">
  <div class="mt-1.5 flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-2">
    <a href="/crearAusencia" class="text-green-700 hover:text-white border border-green-700 hover:bg-green-800 focus:ring-4 focus:outline-none focus:ring-green-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:border-green-500 dark:text-green-500 dark:hover:text-white dark:hover:bg-green-600 dark:focus:ring-green-800">Crear Ausencia</a>
  </div>

  <div id="ausencias-container" class="mt-4">
    <div class="text-center py-4">Cargando ausencias...</div>
  </div>

  <script>
    const getAusencias = async () => {
      try {
        const token = sessionStorage.getItem('authToken');
        const response = await fetch('http://127.0.0.1:8080/api/ausencias', {
          headers: {
            'Authorization': `Bearer ${token}`
          }
        });
        if (!response.ok) {
          throw new Error(`Failed to fetch ausencias: ${response.status} ${response.statusText}`);
        }
        const data = await response.json();
        return data;
      } catch (err) {
        console.error('Error fetching ausencias:', err);
        return [];
      }
    };

    document.addEventListener('DOMContentLoaded', async () => {
      const container = document.getElementById('ausencias-container');
      try {
        const ausencias = await getAusencias();
        if (ausencias.length === 0) {
          container.innerHTML = '<div class="text-center py-4">No hay ausencias registradas</div>';
        } else {
          const table = document.createElement('table');
          table.className = 'min-w-full bg-white mt-4';

          const thead = document.createElement('thead');
          thead.className = 'bg-gray-800 text-white';
          thead.innerHTML = `
            <tr>
              <th class="w-1/4 px-4 py-2">Día</th>
              <th class="w-1/4 px-4 py-2">Mes</th>
              <th class="w-1/4 px-4 py-2">Hora</th>
              <th class="w-1/4 px-4 py-2">ID</th>
              <th class="w-1/4 px-4 py-2">Acciones</th>
            </tr>
          `;
          table.appendChild(thead);

          const tbody = document.createElement('tbody');
          ausencias.forEach(ausencia => {
            const tr = document.createElement('tr');
            tr.innerHTML = `
              <td class="border px-4 py-2">${new Date(ausencia.fecha).getDate()}</td>
              <td class="border px-4 py-2">${new Date(ausencia.fecha).toLocaleString('default', { month: 'long' })}</td>
              <td class="border px-4 py-2">${ausencia.hora}</td>
              <td class="border px-4 py-2">${ausencia.id}</td>
              <td class="border px-4 py-2 flex flex-col space-y-2">
                <button class="editar-btn text-yellow-400 hover:text-white border border-yellow-400 hover:bg-yellow-500 focus:ring-4 focus:outline-none focus:ring-yellow-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:border-yellow-300 dark:text-yellow-300 dark:hover:text-white dark:hover:bg-yellow-400 dark:focus:ring-yellow-900" data-id="${ausencia.id}">Editar</button>
                <button class="eliminar-btn text-red-700 hover:text-white border border-red-700 hover:bg-red-800 focus:ring-4 focus:outline-none focus:ring-red-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:border-red-500 dark:text-red-500 dark:hover:text-white dark:hover:bg-red-600 dark:focus:ring-red-900" data-id="${ausencia.id}">Eliminar</button>
              </td>
            `;
            tbody.appendChild(tr);
          });
          table.appendChild(tbody);

          container.innerHTML = '';
          container.appendChild(table);

          // Agregar manejadores de eventos para botones de editar y eliminar
          document.querySelectorAll('.editar-btn').forEach(button => {
            button.addEventListener('click', (event) => {
              const id = event.currentTarget.getAttribute('data-id');
              editarAusencia(id);
            });
          });

          document.querySelectorAll('.eliminar-btn').forEach(button => {
            button.addEventListener('click', (event) => {
              const id = event.currentTarget.getAttribute('data-id');
              eliminarAusencia(id);
            });
          });
        }
      } catch (error) {
        container.innerHTML = `<div class="text-center py-4 text-red-500">Error: ${error.message}</div>`;
      }
    });

    const editarAusencia = (id) => {
      // Redireccionar a la página de edición de ausencia con el id correspondiente
      window.location.href = `/editarAusencia/${id}`;
    };

    const eliminarAusencia = (id) => {
      if (!id) {
        console.error('No id provided for deletion');
        return;
      }
      const token = sessionStorage.getItem('authToken');
      fetch(`http://127.0.0.1:8080/api/ausencias/${id}`, {
        method: 'DELETE',
        headers: {
          'Authorization': `Bearer ${token}`,
          'Content-Type': 'application/json'
        }
      })
      .then(async response => {
        if (!response.ok) {
          const errorText = await response.text();
          throw new Error(`Network response was not ok: ${response.statusText}. Details: ${errorText}`);
        }
        return response.json();
      })
      .then(data => {
        console.log('Ausencia eliminada:', data);
        alert('Ausencia eliminada correctamente');
        // Recargar la página o actualizar la tabla de ausencias
        location.reload();
      })
      .catch(error => {
        console.error('Error eliminando la ausencia:', error);
        alert(`Error eliminando la ausencia: ${error.message}`);
      });
    };
  </script>
</Layout>
