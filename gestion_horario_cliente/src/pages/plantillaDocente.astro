---
import Navbar from '../components/navbar.astro';
import Layout from '../layouts/Layout.astro';
import EditButton from '../components/editButton.astro';
import DeleteButton from '../components/deleteButton.astro';

const user = [
  { id: 1, name: 'Profesor A' },
  { id: 2, name: 'Profesor B' },
  { id: 3, name: 'Profesor C' }
];
---

<Layout title='Plantilla'>
  <Navbar />
  <div class="container mx-auto flex flex-wrap py-4">
    <div class="w-full md:w-1/2 flex flex-col items-start">
      <form id="uploadForm" class="mb-4">
        <label for="file" class="block mb-2 text-sm font-medium text-gray-700 dark:text-gray-200">Adjunte el documento .xml:</label>
        <div class="flex">
          <input type="file" id="file" name="xml" class="block w-2/3 text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 cursor-pointer dark:text-gray-400 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400">
          <button type="button" onclick="handleFileUpload()" class="ml-4 px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-700">Cargar Archivo</button>
        </div>
      </form>
    </div>
    <div class="w-full md:w-1/2 flex flex-col items-end">
      <div class="flex items-center">
        <select id="profesorSelect" name="user" class="block w-2/3 text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 cursor-pointer dark:text-gray-400 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 mr-4">
          <option value="">Escoja un profesor</option>
          {user.map(user => (
            <option value={user.id}>{user.name}</option>
          ))}
        </select>
        <EditButton id="editButton" style="display: none;" />
        <DeleteButton id="deleteButton" style="display: none;" />
      </div>
      <div class="mt-4 flex space-x-4">
        <button id="verFaltas" style="display: none;" class="px-4 py-2 bg-green-500 text-white rounded-lg hover:bg-green-700">Ver Faltas</button>
        <button id="verHorario" style="display: none;" class="px-4 py-2 bg-green-500 text-white rounded-lg hover:bg-green-700">Ver Horario</button>
      </div>
    </div>
  </div>

  <!-- Faltas -->
  <div id="tablaFaltas" class="container mx-auto py-4" style="display: none;">
    <table border="1" class="min-w-full bg-white dark:bg-gray-800 text-gray-700 dark:text-gray-200">
      <thead>
        <tr>
          <th class="py-2 px-4 border-b-2 border-gray-200 dark:border-gray-600">Día</th>
          <th class="py-2 px-4 border-b-2 border-gray-200 dark:border-gray-600">Hora</th>
          <th class="py-2 px-4 border-b-2 border-gray-200 dark:border-gray-600">Clase</th>
          <th class="py-2 px-4 border-b-2 border-gray-200 dark:border-gray-600">Descripción</th>
        </tr>
      </thead>
      <tbody>
        <!-- Necesito los datos para poder hacer las celdas -->
      </tbody>
    </table>
  </div>

  <!-- Horario -->
  <div id="tablaHorario" class="container mx-auto py-4" style="display: none;">
    <table border="1" class="min-w-full bg-white dark:bg-gray-800 text-gray-700 dark:text-gray-200">
      <thead>
        <tr>
          <th class="py-2 px-4 border-b-2 border-gray-200 dark:border-gray-600">Hora</th>
          <th class="py-2 px-4 border-b-2 border-gray-200 dark:border-gray-600">Asignatura</th>
          <th class="py-2 px-4 border-b-2 border-gray-200 dark:border-gray-600">Edificio-Aula</th>
          <th class="py-2 px-4 border-b-2 border-gray-200 dark:border-gray-600">Grupo</th>
        </tr>
      </thead>
      <tbody>
        <!-- Necesito los datos para poder hacer las celdas -->
      </tbody>
    </table>
  </div>

  <script type="module">
    async function handleFileUpload() {
      const fileInput = document.getElementById('file');
      const file = fileInput.files[0];
      if (!file) {
        alert('Por favor, seleccione un archivo para cargar.');
        return;
      }

      const formData = new FormData();
      formData.append('xml', file);

      try {
        const response = await fetch('http://localhost:8080/api/upload-xml', {
          method: 'POST',
          body: formData,
        });

        if (!response.ok) {
          throw new Error('Error en la respuesta del servidor: ' + response.statusText);
        }

        const result = await response.json();
        alert('Archivo procesado: ' + result.message);
      } catch (error) {
        console.error('Error uploading file:', error);
        alert('Error al procesar el archivo: ' + error.message);
      }
    }

    const profesorSelect = document.getElementById('profesorSelect');
    const verFaltas = document.getElementById('verFaltas');
    const verHorario = document.getElementById('verHorario');
    const tablaFaltas = document.getElementById('tablaFaltas');
    const tablaHorario = document.getElementById('tablaHorario');
    const editButton = document.getElementById('editButton');
    const deleteButton = document.getElementById('deleteButton');

    function updateVisibility() {
      const isSelected = profesorSelect.value !== "";
      verFaltas.style.display = isSelected ? 'block' : 'none';
      verHorario.style.display = isSelected ? 'block' : 'none';
      editButton.style.display = isSelected ? 'inline-block' : 'none';
      deleteButton.style.display = isSelected ? 'inline-block' : 'none';
      tablaFaltas.style.display = 'none';
      tablaHorario.style.display = 'none';
    }

    profesorSelect.addEventListener('change', updateVisibility);
    window.onload = updateVisibility;

    verFaltas.addEventListener('click', () => {
      tablaFaltas.style.display = 'block';
      tablaHorario.style.display = 'none';
    });

    verHorario.addEventListener('click', () => {
      tablaHorario.style.display = 'block';
      tablaFaltas.style.display = 'none';
    });
  </script>
</Layout>

<style>
  button { color: aliceblue; }
  label { color: aliceblue; }
  input { color: aliceblue; }
</style>
